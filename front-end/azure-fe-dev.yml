trigger:
  batch: true
  branches:
   include:
     - dev
  paths:
    include:
      - front-end

pool: Default
#  vmImage: ubuntu-20.04

variables:
- name: testpath
  value: front-end
# for trigger
steps:

#- script: VERSION_TAG=`git tag --sort=-creatordate` && echo "##vso[task.setvariable variable=VERSION_TAG]$VERSION_TAG"
- script: VERSION_TAG=`git describe --tags` && echo "##vso[task.setvariable variable=VERSION_TAG]$VERSION_TAG"
  displayName: Define VERSION_TAG variable

- script: |
    res=0
    for file in $( find ${{ variables.testpath }} -type f -name '*.php' ); do
      php -l "$file" || res=1
    done
    if [ $res != 0 ]; then echo "##vso[task.logissue type=error]PHP syntax error."
    else
      echo "$VERSION_TAG">version_tag
    fi
    exit $res
  displayName: Lint PHP files

- script: |
    mkdir /root/.docker
    echo -n "$(acr-user):$(acr-pass)" | base64 -w0
    echo "{\"auths\":{\"$(acr-host)\":{\"auth\":\"`echo -n "$(acr-user):$(acr-pass)" | base64 -w0`\"}}}" >/root/.docker/config.json
    export DOCKERCONFIG=/root/.docker
    echo $DOCKERCONFIG
    buildctl-daemonless.sh build --frontend=dockerfile.v0 --local context=front-end --local dockerfile=front-end --output type=image,name=$(acr-host)/nhl_fe_dev:$VERSION_TAG,push=true

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: 'version_tag'
    artifact: 'version_tag'
    publishLocation: 'pipeline'
